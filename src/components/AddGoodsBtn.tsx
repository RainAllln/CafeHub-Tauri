import { Button, Form, Input, InputNumber, message, Modal, Select } from 'antd'
import React, { useState } from 'react'
import { AddProductData } from '@/api/product'; // Import AddProductData

// 定义组件的 props 接口
interface AddGoodsBtnProps {
  // initProducts is no longer needed as ID is generated by backend
  initCategories: string[];
  onProductAdded: () => void; // Callback to refresh product list in parent
}

const AddGoodsBtn: React.FC<AddGoodsBtnProps> = ({ initCategories, onProductAdded }) => {
  const [isAddModalVisible, setIsAddModalVisible] = useState(false);
  const [addForm] = Form.useForm();
  const [loading, setLoading] = useState(false);

  const showAddModal = () => {
    setIsAddModalVisible(true);
  };

  const handleAddOk = async () => {
    try {
      setLoading(true);
      const values = await addForm.validateFields(); // values will match form field names

      // Prepare data for the backend, matching AddGoodsData structure
      const newProductData: AddProductData = {
        goods_name: values.goods_name,
        price: values.price,
        goods_type: values.goods_type || undefined, // Send undefined if not selected, backend handles Option<String>
        stock: values.stock !== undefined && values.stock !== null ? values.stock : undefined, // Send undefined if empty, backend handles Option<i32>
      };

      // Dynamically import addProduct to use it
      const { addProduct } = await import('@/api/product');
      const resultMessage = await addProduct(newProductData);

      message.success(resultMessage || '商品添加成功！');
      setIsAddModalVisible(false);
      addForm.resetFields();
      onProductAdded(); // Notify parent component to refresh the product list
    } catch (error: any) {
      console.error('添加商品失败:', error);
      message.error(error.message || '添加失败，请检查表单或联系管理员。');
    } finally {
      setLoading(false);
    }
  };

  const handleAddCancel = () => {
    setIsAddModalVisible(false);
    addForm.resetFields();
  };

  return (
    <>
      <Button type="primary" onClick={showAddModal} style={{ marginBottom: '20px' }}>
        添加商品
      </Button>

      <Modal
        title="添加新商品"
        open={isAddModalVisible}
        onOk={handleAddOk}
        onCancel={handleAddCancel}
        okText="添加"
        cancelText="取消"
        confirmLoading={loading}
        destroyOnClose
      >
        <Form form={addForm} layout="vertical" name="addProductForm" initialValues={{ price: null, stock: null, goods_type: undefined }}>
          <Form.Item
            name="goods_name"
            label="商品名称"
            rules={[{ required: true, message: '请输入商品名称!' }]}
          >
            <Input />
          </Form.Item>
          <Form.Item
            name="price"
            label="价格"
            rules={[
              { required: true, message: '请输入商品价格!' },
              {
                type: 'number',
                min: 0.01, // Price must be positive
                message: '价格必须大于0!',
                transform: value => Number(value)
              },
            ]}
          >
            <InputNumber style={{ width: '100%' }} min={0.01} step={0.01} precision={2} addonAfter="元 (￥)" />
          </Form.Item>
          <Form.Item
            name="stock"
            label="库存"
            rules={[
              // Stock is optional in backend, but if provided, must be non-negative
              {
                type: 'number',
                min: 0,
                message: '库存不能为负数!',
                transform: value => Number(value)
              },
            ]}
          >
            <InputNumber style={{ width: '100%' }} min={0} step={1} precision={0} placeholder="可选，默认为0" />
          </Form.Item>
          <Form.Item
            name="goods_type" // Changed from 'category' to 'goods_type'
            label="类别"
          // goods_type is optional in backend
          >
            <Select placeholder="选择一个类别 (可选)">
              {initCategories.map(cat => (
                <Select.Option key={cat} value={cat}>
                  {cat}
                </Select.Option>
              ))}
            </Select>
          </Form.Item>
        </Form>
      </Modal>
    </>
  )
}

export default AddGoodsBtn